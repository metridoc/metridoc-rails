load_sequence:         11
target_adapter:        'native_sql'
target_model:          "Ezborrow::Reshare::LendingTurnaround"
truncate_before_load:  "yes"
sqls:
  - |
    WITH max_date AS (
      SELECT
        COALESCE (
          MAX(request_date),
          '1970-01-01'
        ) AS max_date
      FROM reshare_lending_turnarounds
    ),
    directory_map AS (
      SELECT
        origin,
        de_name
      FROM reshare_directory_entries de
      WHERE 
        de_parent IS NULL
        AND de_status_fk IS NOT NULL
        AND de_name NOT IN (
          'South Charleston Campus Collection', 
          'Bobst Circulation Desk'
        )
    ),
    history AS (
      SELECT
        dm.de_name AS lender,
        pra.pra_patron_request_fk AS request_id,
        MIN(
          CASE WHEN s.st_code = 'RES_IDLE'
          THEN pra.pra_date_created
          END
        ) AS request_date,
        MIN(
          CASE WHEN s.st_code = 'RES_AWAIT_PICKING'
          THEN pra.pra_date_created
          END
        ) AS filled_date,
        MIN(
          CASE WHEN s.st_code = 'RES_ITEM_SHIPPED'
          THEN pra.pra_date_created
          END
        ) AS shipped_date,
        MIN(
          CASE WHEN
            s.st_code like 'RES_ITEM_SHIPPED'
            AND pra.pra_message = 'Shipment received by requester'
          THEN pra.pra_date_created
          END
        ) AS received_date
      FROM reshare_patron_request_audits pra
      JOIN reshare_status s
        ON pra.pra_to_status_fk = s.st_id
      JOIN directory_map dm
        ON pra.origin = dm.origin
      WHERE pra.pra_date_created > (SELECT max_date FROM max_date)
      GROUP BY dm.de_name, pra.pra_patron_request_fk
    )
    INSERT INTO reshare_lending_turnarounds (
      lender,
      request_id,
      request_date,
      fiscal_year,
      filled_date,
      shipped_date,
      received_date
    )
    SELECT
      lender,
      request_id,
      request_date,
      EXTRACT(
        year FROM (
          request_date + INTERVAL '6 months'
        )
      ), 
      filled_date,
      shipped_date,
      received_date
    FROM history
    WHERE COALESCE(request_date, filled_date, shipped_date, received_date) IS NOT NULL
    ON CONFLICT (lender, request_id)
    DO UPDATE
    SET
      filled_date = LEAST(reshare_lending_turnarounds.filled_date, EXCLUDED.filled_date),
      shipped_date = LEAST(reshare_lending_turnarounds.shipped_date, EXCLUDED.shipped_date),
      received_date = LEAST(reshare_lending_turnarounds.received_date, EXCLUDED.received_date);
  - |
    UPDATE reshare_lending_turnarounds
    SET
      time_to_fill = ROUND(
        CAST (
          EXTRACT(
            EPOCH FROM (filled_date - request_date)
          ) / 24 / 3600
          AS NUMERIC
        ), 5),
      time_to_ship = ROUND(
        CAST (
          EXTRACT(
            EPOCH FROM (shipped_date - filled_date)
          ) / 24 / 3600
          AS NUMERIC
        ), 5),
      time_to_receipt = ROUND(
        CAST(
          EXTRACT(
            EPOCH FROM (received_date - shipped_date)
          ) / 24 / 3600
          AS NUMERIC
        ), 5),
      total_time = ROUND(
        CAST(
          EXTRACT(
            EPOCH FROM (received_date - request_date)
          ) / 24 / 3600
          AS NUMERIC
        ), 5)
      WHERE total_time IS NULL
        AND received_date IS NOT NULL ;