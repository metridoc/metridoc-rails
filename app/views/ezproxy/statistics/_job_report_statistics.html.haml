= javascript_include_tag 'application'
%h2 Fiscal Year EZProxy Usage

- minimum_year = (Ezproxy::EzpaarseJobReport.minimum(:date) + 6.months).year
- maximum_year = (Ezproxy::EzpaarseJobReport.maximum(:date) + 6.months).year

- params[:fiscal_year] ||= maximum_year

-# Form to update filters on page
%center
  The default year is set to the current fiscal year.
  = form_tag(nil, {method: :get}) do
    %table{:style => "background-color:#DADADA; margin: 10px;"}
      %tr
        %td Filter on Fiscal Year:
        %td
        %td
          = select_tag :fiscal_year, 
            options_for_select(maximum_year.downto(minimum_year))
        %td{rowspan:0}= submit_tag "Filter"

- fiscal_year = params[:fiscal_year]
- fiscal_year_range = Date.new(fiscal_year-1, 7, 1)..Date.new(fiscal_year, 6, 30)
- model = Ezproxy::EzpaarseJobReport.where(date: fiscal_year_range).where(date: Date.new(2024,9,1)..)
%hr
%section
  %h3 Number of Requests per Day for FY#{fiscal_year}
  - data = model.select("date", "lines_input").map{|x| [x['date'],  x['lines_input']]}.to_h
  = line_chart data, 
    download: true,
    thousands: ',',
    colors: ["#990000"],
    xtitle: "Request Date",
    ytitle: "Number of Requests",
    title: "Number of Requests Recorded per Day"

  - data = model.select("date", "ecs").map{|x| [x['date'],  x['ecs']]}.to_h
  = line_chart data, 
    download: true,
    thousands: ',',
    colors: ["#011F5B"],
    xtitle: "Request Date",
    ytitle: "Number of Parsed Requests",
    title: "Number of Requests Successfully Parsed Per Day"

%hr
%section
  %h3 Log Breakdown
  %div{style: "width: 100%; display: flex; align-items: stretch;"}
    %div{style: "width: 47%;"}
      - column_counter = (model.column_names - ["id", "date", "filename", "lines_input", "on_campus", "off_campus"]).map{|x| [x,0]}.to_h
      - Ezproxy::EzpaarseJobReport.where(date: 1.week.ago..).each{|x| column_counter.keys.each{|k| column_counter[k] += x[k]}}
      = pie_chart column_counter,
        download: true,
        thousands: ',',
        legend: "right",
        title: "Requests from the last week"
    %div{style: "width: 47%;"}
      - column_counter = column_counter.map{|k, _| [k, 0]}.to_h
      - model.each{|x| column_counter.keys.each{|k| column_counter[k] += x[k]}}
      = pie_chart column_counter,
        download: true,
        thousands: ',',
        legend: "right",
        title: "Requests from FY#{fiscal_year}"
  %br
  %div{style: "text-align:center;"}* Hover over wedge for number of requests.  Click on the legend to filter by category.
  %hr{style: "border-color:#D3D3D3;width:75%;margin-left:auto;margin-right:auto;"}
  %h3 Definitions of Log Breakdown
  %ul
    %li ecs - Electronic Consultation, a fully parsed request
    %li denied_ecs - Requests denied to the user at the time of click, likely pre-login
    %li ignored - Irrelevant requests, typically web assets like fonts or images
    %li duplicate_ecs - Number of requests detected as double-clicks. 
    %li ignored_domains - Requests for domains to be ignored, such as google
    %li unknown_domains - Requests for domains not currently managed by ezPAARSE
    %li unknown_formats - Incorrectly formatted log line
    %li unqualified_ecs - The request did not have enough information to point to a document, potentially a search or index page of the resource
    %li unordered_ecs - Log lines in the wrong chronological order, does not happen
    %li ignored_hosts - Hosts voluntarily ignored, does not happen
    %li robots_ecs - Requests generated by robots or spiders
    %li unknown_errors - Lines rejected by unknown errors, does not happen
