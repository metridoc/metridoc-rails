---
include:
  - project: devops/gitlab/ci-templates/docker
    ref: 1.0.0
    file:
      - .amend_manifests.yml
      - .build_and_push_docker_images.yml
      - .copy_docker_images.yml
      - .remove_tmp_registry.yml
  - project: devops/gitlab/ci-templates/sast
    ref: master
    file:
      - .trivy_container_scanning.yml
  - template: "Workflows/MergeRequest-Pipelines.gitlab-ci.yml"
  - component: gitlab.library.upenn.edu/devops/gitlab/components/deploy/deploy@~latest
    inputs:
      deploy_environment_url: "https://metridoc-staging.library.upenn.edu"
      deploy_host: "${DEPLOY_HOST}"
      valid_principals: "${VALID_PRINCIPALS}"
      vault_auth_role: "${VAULT_AUTH_ROLE}"
      vault_ssh_client_role: "${VAULT_SSH_CLIENT_ROLE}"
  - component: gitlab.library.upenn.edu/devops/gitlab/components/deploy/deploy@~latest
    inputs:
      deploy_environment: "production"
      deploy_environment_url: "https://metridoc.library.upenn.edu"
      deploy_host: "${DEPLOY_HOST}"
      job_suffix: "production"
      valid_principals: "${VALID_PRINCIPALS}"
      vault_auth_role: "${VAULT_AUTH_ROLE}"
      vault_ssh_client_role: "${VAULT_SSH_CLIENT_ROLE}"

stages:
  - build_and_push:base_image
  - build_and_push:dev_image
  - amend_tmp_base_dev_images
  - build_and_push:tmp_prod_image
  - amend_tmp_prod_images
  - sast
  - copy_docker_images
  - remove_tmp_registry
  - deploy

build_and_push_base_image:
  stage: build_and_push:base_image
  extends:
    - .build_and_push_docker_images
  parallel:
    matrix:
      - RUNNER: build-arm
        DOCKER_BUILD_PLATFORM: linux/arm64
      - RUNNER: build
        DOCKER_BUILD_PLATFORM: linux/amd64
  variables:
    DOCKER_TARGET: "base"
  tags:
    - ${RUNNER}

build_and_push_dev_image:
  stage: build_and_push:dev_image
  extends:
    - .build_and_push_docker_images
  parallel:
    matrix:
      # - RUNNER: build-arm
      #   DOCKER_BUILD_PLATFORM: linux/arm64
      - RUNNER: build
        DOCKER_BUILD_PLATFORM: linux/amd64
  variables:
    DOCKER_ADDITIONAL_CACHE_TARGETS: "base"
    DOCKER_TARGET: "development"
  tags:
    - ${RUNNER}

amend_tmp_base_dev_images:
  stage: amend_tmp_base_dev_images
  extends:
    - .amend_manifests
  needs:
    - build_and_push_base_image
    - build_and_push_dev_image
  variables:
    REGISTRY_REPOSITORY: "${CI_PIPELINE_ID}"
  tags:
    - build

build_and_push_prod_image:
  stage: build_and_push:tmp_prod_image
  extends:
    - .build_and_push_docker_images
  needs:
    - amend_tmp_base_dev_images
  parallel:
    matrix:
      # - RUNNER: build-arm
      #   DOCKER_BUILD_PLATFORM: "linux/arm64"
      - RUNNER: build
        DOCKER_BUILD_PLATFORM: "linux/amd64"
  variables:
    DOCKER_ADDITIONAL_CACHE_TARGETS: "base development"
    DOCKER_TARGET: "production"
  tags:
    - ${RUNNER}

amend_tmp_prod_images:
  stage: amend_tmp_prod_images
  extends:
    - .amend_manifests
  needs:
    - build_and_push_prod_image
  variables:
    DOCKER_TARGET: "production"
    TAG_WITH_DOCKER_TARGET: "false"
  tags:
    - build

trivy_container_scanning:
  stage: sast
  extends:
    - .trivy_container_scanning
  before_script:
    - apk add --no-cache docker
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  after_script:
    - docker logout ${CI_REGISTRY}
  needs:
    - build_and_push_prod_image
  variables:
    CI_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${CI_PIPELINE_ID}:${CI_COMMIT_SHORT_SHA}
  allow_failure: true
  tags:
    - build

copy_docker_images:
  stage: copy_docker_images
  variables:
    ORIGINAL_REGISTRY_REPOSITORY: ${CI_PIPELINE_ID}
  needs:
    - trivy_container_scanning
  extends:
    - .copy_docker_images
  tags:
    - build

remove_tmp_registry:
  stage: remove_tmp_registry
  extends:
    - .remove_tmp_registry
  rules:
    - when: always
  needs:
    - copy_docker_images
  allow_failure: true
  tags:
    - build

# Deploy staging
deploy_staging:
  needs:
    - copy_docker_images
  rules:
    - if: $CI_COMMIT_REF_NAME == "staging"
  
# Deploy production
deploy_production:
  needs:
    - copy_docker_images
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
